{"version":3,"file":"static/js/136.6271a474.chunk.js","mappings":"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","sources":["components/Error/Error.jsx","components/ServiceAPI/ServiceAPI.js","components/SearchFilms/SearchFilms.jsx","components/FormSearch/FormSearch.jsx","components/pages/Movies/Movies.jsx"],"sourcesContent":["\n\nexport const ErrorCard = ({children}) => {\n    return <p>{children}</p>\n    }","import axios from \"axios\";\n\nconst baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'c24b132e7bdacd2f4b83fad270195cf7'\n\nexport const fetchTrending= async () => {\nconst response = await axios.get(`${baseURL}/trending/movie/day?api_key=${API_KEY}`)\n\n\nreturn response.data.results\n}\n\n\nexport const fetchFilmsDetails = async (movieId) => {\n    const response = await axios.get(`${baseURL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`)\n\n    if (response.status !== 200) {\n        throw new Error(' ERROR! Smth went wrong! ');\n      } else return response.data;\n}\n\n\nexport const fetchCastMovie = async (movieId) => {\n    const response = await axios.get(`${baseURL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`)\n\n    if (response.status !== 200) {\n        throw new Error(' ERROR! Smth went wrong! ');\n      } else return  response.data.cast;\n}\n\nexport const fetchReviews = async (movieId) => {\n    const response = await axios.get(`${baseURL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`)\n\n    if (response.status !== 200) {\n        throw new Error(' ERROR! Smth went wrong! ');\n      } else return  response.data.results;\n}\n\nexport const fetchSearch = async (query) => {\n \nconst response = await axios.get(`${baseURL}/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`)\nif (response.status !== 200) {\n    console.log(response)\n    throw new Error(' ERROR! Smth went wrong! ');\n  } else return response.data.results\n}","import { Link, useLocation } from \"react-router-dom\";\n\nexport const SearchFilms = ({films}) => {\n    \n    const location = useLocation();\n    return (\n        <ul>\n          {films.map(film => (\n            <li key={film.id}>\n              <Link to={`/movies/${film.id}`}  state={{ from: location }}>\n                {film.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      );\n}","import PropTypes from 'prop-types';\n\nimport { useState } from \"react\";\n\nexport const FormSearch = ({fetchSearchMovie}) => {\n    const [query, setQuery] = useState('');\n\n    const handleInputChange = event => {\n      setQuery(event.target.value);\n      \n    };\n  \n    const handleSubmit = event => {\n      event.preventDefault();\n      fetchSearchMovie(query.toLowerCase());\n    };\n   \n  \n    return (\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"query\"\n          autoFocus\n          value={query}\n          onChange={handleInputChange}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n    );\n}\n\n\nFormSearch.propTypes = {\n    searchMovies: PropTypes.func.isRequired,\n  };\n  ","import { SearchFilms } from 'components/SearchFilms/SearchFilms';\nimport { FormSearch } from 'components/FormSearch/FormSearch';\nimport { fetchSearch } from 'components/ServiceAPI/ServiceAPI';\nimport { useState } from 'react';\nimport { Loader } from 'components/Loader/Loader';\nimport { ErrorCard } from 'components/Error/Error';\nimport { useCustomContext } from 'components/Context/Context';\n\nexport const Movies = () => {\n  const {search, setSearch} = useCustomContext();\n  const [err, setErr] = useState('');\n  const [found, setFound] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n\n\n  const fetchSearchMovie = movie => {\n    setLoading(true);\n    fetchSearch(movie)\n      .then(result => {\n        setSearch(result);\n        setFound(result.length === 0);\n      })\n      .catch(err =>  setErr(err.statusText))\n      .finally(setLoading(false));\n  };\n\n  return (\n    <>\n      <FormSearch fetchSearchMovie={fetchSearchMovie} />\n      {loading && <Loader />}\n      {search && <SearchFilms films={search} />}\n      {found  && <p>Nothing found, please re-enter the title</p>}\n      {err && <ErrorCard>{err}</ErrorCard>}\n    </>\n  );\n};\n"],"names":["ErrorCard","children","baseURL","API_KEY","fetchTrending","axios","response","data","results","fetchFilmsDetails","movieId","status","Error","fetchCastMovie","cast","fetchReviews","fetchSearch","query","console","log","SearchFilms","films","location","useLocation","map","film","to","id","state","from","title","FormSearch","fetchSearchMovie","useState","setQuery","onSubmit","event","preventDefault","toLowerCase","type","name","autoFocus","value","onChange","target","Movies","useCustomContext","search","setSearch","err","setErr","found","setFound","loading","setLoading","movie","then","result","length","catch","statusText","finally","Loader"],"sourceRoot":""}