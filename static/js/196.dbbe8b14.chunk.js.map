{"version":3,"file":"static/js/196.dbbe8b14.chunk.js","mappings":"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","sources":["components/Error/Error.jsx","components/ServiceAPI/ServiceAPI.js","components/pages/MoviesDetail/MoviesDetail.jsx"],"sourcesContent":["\n\nexport const ErrorCard = ({children}) => {\n    return <p>{children}</p>\n    }","import axios from \"axios\";\n\nconst baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'c24b132e7bdacd2f4b83fad270195cf7'\n\nexport const fetchTrending= async () => {\nconst response = await axios.get(`${baseURL}/trending/movie/day?api_key=${API_KEY}`)\n\n\nreturn response.data.results\n}\n\n\nexport const fetchFilmsDetails = async (movieId) => {\n    const response = await axios.get(`${baseURL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`)\n\n    if (response.status !== 200) {\n        throw new Error(' ERROR! Smth went wrong! ');\n      } else return response.data;\n}\n\n\nexport const fetchCastMovie = async (movieId) => {\n    const response = await axios.get(`${baseURL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`)\n\n    if (response.status !== 200) {\n        throw new Error(' ERROR! Smth went wrong! ');\n      } else return  response.data.cast;\n}\n\nexport const fetchReviews = async (movieId) => {\n    const response = await axios.get(`${baseURL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`)\n\n    if (response.status !== 200) {\n        throw new Error(' ERROR! Smth went wrong! ');\n      } else return  response.data.results;\n}\n\nexport const fetchSearch = async (query) => {\n \nconst response = await axios.get(`${baseURL}/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`)\nif (response.status !== 200) {\n    console.log(response)\n    throw new Error(' ERROR! Smth went wrong! ');\n  } else return response.data.results\n}","import { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport {  useEffect, useState } from 'react';\n\nimport { fetchFilmsDetails } from 'components/ServiceAPI/ServiceAPI';\nimport { ErrorCard } from 'components/Error/Error';\nimport { Loader } from 'components/Loader/Loader';\n\nexport const MovieDetail = () => {\n  const [movieDet, setMovieDet] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [err, setError] = useState('');\n\n  const { movieId } = useParams();\n\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchMovieDet = () => {\n      setLoading(true);\n      fetchFilmsDetails(movieId)\n        .then(moviesDet => setMovieDet(moviesDet))\n        .catch(error => setError(error.statusText))\n        .finally(setLoading(false));\n    };\n    fetchMovieDet();\n  }, [movieId]);\n  console.log(movieDet);\n  if (!movieDet) {\n    return;\n  }\n\n  const {\n    title,\n    release_date,\n    popularity,\n    overview,\n    genres,\n    poster_path,\n    original_title,\n  } = movieDet;\n\n  return (\n    <>\n      <button>\n        <Link to={location.state?.from ?? '/'}>Go Back</Link>\n      </button>\n      {loading && <Loader/>}\n      <div>\n        <img\n          width=\"300px\"\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500${poster_path}`\n              : `https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg`\n          }\n          alt={original_title}\n        />\n        <div>\n          <h1>\n            {title} ({release_date.slice(0, 4)})\n          </h1>\n          <p>User score: {popularity}</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h2>Genres</h2>\n          <ul>\n            {genres.map(genre => (\n              <li key={genre.id}>{genre.name}</li>\n            ))}\n          </ul>\n        </div>\n\n        <div>\n          <h3>Additional information</h3>\n          <ul>\n            <li>\n              <Link to=\"cast\">Cast</Link>\n            </li>\n            <li>\n              <Link to=\"reviews\">Reviews</Link>\n            </li>\n          </ul>\n         \n            <Outlet />\n      \n        </div>\n      </div>\n      {err && <ErrorCard>{err}</ErrorCard>}\n    </>\n  );\n};\n"],"names":["ErrorCard","children","baseURL","API_KEY","fetchTrending","axios","response","data","results","fetchFilmsDetails","movieId","status","Error","fetchCastMovie","cast","fetchReviews","fetchSearch","query","console","log","MovieDetail","useState","movieDet","setMovieDet","loading","setLoading","err","setError","useParams","location","useLocation","useEffect","then","moviesDet","catch","error","statusText","finally","title","release_date","popularity","overview","genres","poster_path","original_title","to","state","from","width","src","alt","slice","map","genre","name","id"],"sourceRoot":""}