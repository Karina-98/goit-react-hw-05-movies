{"version":3,"file":"static/js/247.156fb242.chunk.js","mappings":"gPAKaA,EAAO,WAChB,IAAOC,GAAWC,EAAAA,EAAAA,MAAXD,QACP,GAA6BE,EAAAA,EAAAA,WAAS,GAAtC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAWD,OATCC,EAAAA,EAAAA,YAAU,WAGNH,GAAW,IACXI,EAAAA,EAAAA,IAAeR,GAASS,MAAK,SAACJ,GAAD,OAAUC,EAAUD,EAApB,IAA6BK,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,EAArB,IAA6BG,SAAQ,kBAAMV,GAAW,EAAjB,GAGzG,GAAC,CAACJ,KAGF,2BACGG,IAAW,SAAC,IAAD,KAEZ,wBACGE,EAAOU,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,cAAeC,EAApC,EAAoCA,KAAMC,EAA1C,EAA0CA,UAA1C,OACV,2BACE,gBACEC,MAAM,QACNC,IACEL,EAAY,yCAC0BA,GAD1B,6EAIdM,IAAKL,KAEP,wBAAKC,KACL,0BAAI,cAAYC,OAXTJ,EADC,QAkBnB,C,mMCxCKQ,EAAU,+BACVC,EAAU,mCAEHC,EAAa,mCAAE,oGACLC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,uCAAmDC,IAD9C,cACtBG,EADsB,yBAIrBA,EAASC,KAAKC,SAJO,2CAAF,qDAQbC,EAAiB,mCAAG,WAAO/B,GAAP,uFACN2B,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA8BxB,EAA9B,oBAAiDyB,EAAjD,oBADM,UAGL,OAFlBG,EADuB,QAGhBI,OAHgB,sBAInB,IAAIC,MAAM,6BAJS,gCAKbL,EAASC,MALI,2CAAH,sDASjBrB,EAAc,mCAAG,WAAOR,GAAP,uFACH2B,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA8BxB,EAA9B,4BAAyDyB,EAAzD,oBADG,UAGF,OAFlBG,EADoB,QAGbI,OAHa,sBAIhB,IAAIC,MAAM,6BAJM,gCAKTL,EAASC,KAAKK,MALL,2CAAH,sDAQdC,EAAY,mCAAG,WAAOnC,GAAP,uFACD2B,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA8BxB,EAA9B,4BAAyDyB,EAAzD,oBADC,UAGA,OAFlBG,EADkB,QAGXI,OAHW,sBAId,IAAIC,MAAM,6BAJI,gCAKPL,EAASC,KAAKC,SALP,2CAAH,sDAQZM,EAAW,mCAAG,WAAOC,GAAP,uFAEJV,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iCAA6CC,EAA7C,4DAAwGY,IAFpG,UAGH,OADlBT,EAFqB,QAGdI,OAHc,sBAIvBpB,QAAQC,IAAIe,GACN,IAAIK,MAAM,6BALO,gCAMXL,EAASC,KAAKC,SANH,2CAAH,qD","sources":["components/Cast/Cast.jsx","components/ServiceAPI/ServiceAPI.js"],"sourcesContent":["import { Loader } from \"components/Loader/Loader\";\nimport { fetchCastMovie } from \"components/ServiceAPI/ServiceAPI\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\"\n\nexport const Cast = () => {\n    const {movieId} = useParams();\n    const [loading, setLoading] =useState(false);\n    const [actors, setActors] = useState([]);\n\n    useEffect(()=>\n   {\n    const fetchActors = () => {\n        setLoading(true);\n        fetchCastMovie(movieId).then((actors)=>setActors(actors)).catch((error)=>console.log(error)).finally(() => setLoading(false));\n    }\n    fetchActors()\n   },[movieId] )\n\n   return(\n    <div>\n      {loading && <Loader />}\n\n      <ul>\n        {actors.map(({ id, profile_path, original_name, name, character }) => (\n          <li key={id}>\n            <img\n              width=\"200px\"\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                  : `https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg`\n              }\n              alt={original_name}\n            />\n            <h2>{name}</h2>\n            <h2>Character: {character}</h2>\n          </li>\n        ))}\n      </ul>\n    </div>\n   )\n}","import axios from \"axios\";\n\nconst baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'c24b132e7bdacd2f4b83fad270195cf7'\n\nexport const fetchTrending= async () => {\nconst response = await axios.get(`${baseURL}/trending/movie/day?api_key=${API_KEY}`)\n\n\nreturn response.data.results\n}\n\n\nexport const fetchFilmsDetails = async (movieId) => {\n    const response = await axios.get(`${baseURL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`)\n\n    if (response.status !== 200) {\n        throw new Error(' ERROR! Smth went wrong! ');\n      } else return response.data;\n}\n\n\nexport const fetchCastMovie = async (movieId) => {\n    const response = await axios.get(`${baseURL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`)\n\n    if (response.status !== 200) {\n        throw new Error(' ERROR! Smth went wrong! ');\n      } else return  response.data.cast;\n}\n\nexport const fetchReviews = async (movieId) => {\n    const response = await axios.get(`${baseURL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`)\n\n    if (response.status !== 200) {\n        throw new Error(' ERROR! Smth went wrong! ');\n      } else return  response.data.results;\n}\n\nexport const fetchSearch = async (query) => {\n \nconst response = await axios.get(`${baseURL}/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`)\nif (response.status !== 200) {\n    console.log(response)\n    throw new Error(' ERROR! Smth went wrong! ');\n  } else return response.data.results\n}"],"names":["Cast","movieId","useParams","useState","loading","setLoading","actors","setActors","useEffect","fetchCastMovie","then","catch","error","console","log","finally","map","id","profile_path","original_name","name","character","width","src","alt","baseURL","API_KEY","fetchTrending","axios","response","data","results","fetchFilmsDetails","status","Error","cast","fetchReviews","fetchSearch","query"],"sourceRoot":""}