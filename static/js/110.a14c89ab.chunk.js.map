{"version":3,"file":"static/js/110.a14c89ab.chunk.js","mappings":"mTAEMA,EAAU,+BACVC,EAAU,mCAEHC,EAAa,mCAAE,oGACLC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,uCAAmDC,IAD9C,cACtBG,EADsB,yBAIrBA,EAASC,KAAKC,SAJO,2CAAF,qDAQbC,EAAiB,mCAAG,WAAOC,GAAP,uFACNL,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA8BQ,EAA9B,oBAAiDP,EAAjD,oBADM,UAGL,OAFlBG,EADuB,QAGhBK,OAHgB,sBAInB,IAAIC,MAAM,6BAJS,gCAKbN,EAASC,MALI,2CAAH,sDASjBM,EAAc,mCAAG,WAAOH,GAAP,uFACHL,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA8BQ,EAA9B,4BAAyDP,EAAzD,oBADG,UAGF,OAFlBG,EADoB,QAGbK,OAHa,sBAIhB,IAAIC,MAAM,6BAJM,gCAKTN,EAASC,KAAKO,MALL,2CAAH,sDAQdC,EAAY,mCAAG,WAAOL,GAAP,uFACDL,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA8BQ,EAA9B,4BAAyDP,EAAzD,oBADC,UAGA,OAFlBG,EADkB,QAGXK,OAHW,sBAId,IAAIC,MAAM,6BAJI,gCAKPN,EAASC,KAAKC,SALP,2CAAH,sDAQZQ,EAAW,mCAAG,WAAOC,GAAP,uFAEJZ,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iCAA6CC,EAA7C,4DAAwGc,IAFpG,UAGH,OADlBX,EAFqB,QAGdK,OAHc,sBAIvBO,QAAQC,IAAIb,GACN,IAAIM,MAAM,6BALO,gCAMXN,EAASC,KAAKC,SANH,2CAAH,qD,gIClCXY,EAAW,SAAC,GAAY,IAAXC,EAAU,EAAVA,MAEhBC,GAAWC,EAAAA,EAAAA,MACjB,OAAO,wBAAKF,EAAMG,KAAI,SAAAC,GAAQ,OAAM,2BAAkB,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAKE,IAAMC,MAAO,CAAEC,KAAMP,GAA/C,SAA4DG,EAAKK,QAAa,MAAvFL,EAAKE,GAAyF,KAC9I,E,UCHYI,EAAO,WAClB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOX,EAAP,KAAcY,EAAd,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KAiBA,OAdAC,EAAAA,EAAAA,YAAU,WAUT,OADClB,QAAQC,IAAIE,GAPVc,GAAW,QACX/B,EAAAA,EAAAA,MACGiC,MAAK,SAAAC,GAAiBL,EAASK,EAAc,IAC7CC,OAAM,SAAAC,GAAG,OAAItB,QAAQC,IAAIqB,EAAhB,IACTC,QAAQN,GAAW,GAMzB,GAAE,CAACd,KAGF,+BAAE,4BACF,wBAAI,oBACJ,0BACA,SAACD,EAAD,CAAUC,MAAOA,MAGhBa,IAAW,SAACQ,EAAA,EAAD,QAIf,C","sources":["components/ServiceAPI/ServiceAPI.js","components/pages/FilmList/FilmList.jsx","components/pages/Home/Home.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'c24b132e7bdacd2f4b83fad270195cf7'\n\nexport const fetchTrending= async () => {\nconst response = await axios.get(`${baseURL}/trending/movie/day?api_key=${API_KEY}`)\n\n\nreturn response.data.results\n}\n\n\nexport const fetchFilmsDetails = async (movieId) => {\n    const response = await axios.get(`${baseURL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`)\n\n    if (response.status !== 200) {\n        throw new Error(' ERROR! Smth went wrong! ');\n      } else return response.data;\n}\n\n\nexport const fetchCastMovie = async (movieId) => {\n    const response = await axios.get(`${baseURL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`)\n\n    if (response.status !== 200) {\n        throw new Error(' ERROR! Smth went wrong! ');\n      } else return  response.data.cast;\n}\n\nexport const fetchReviews = async (movieId) => {\n    const response = await axios.get(`${baseURL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`)\n\n    if (response.status !== 200) {\n        throw new Error(' ERROR! Smth went wrong! ');\n      } else return  response.data.results;\n}\n\nexport const fetchSearch = async (query) => {\n \nconst response = await axios.get(`${baseURL}/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`)\nif (response.status !== 200) {\n    console.log(response)\n    throw new Error(' ERROR! Smth went wrong! ');\n  } else return response.data.results\n}","import PropTypes from 'prop-types';\n\nimport { Link, useLocation } from \"react-router-dom\";\n\nexport const FilmList = ({films}) =>{\n\n    const location = useLocation();\n    return <ul>{films.map(film=> {return<li key={film.id}><Link to={`/movies/${film.id}`} state={{ from: location }}>{film.title}</Link> </li>})}</ul>\n}\n\nFilmList.propTypes = {\n    films: PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        id: PropTypes.number.isRequired,\n      })\n    ),\n  };","import { fetchTrending } from 'components/ServiceAPI/ServiceAPI';\nimport {  useEffect, useState } from 'react';\nimport { FilmList } from '../FilmList/FilmList';\nimport { Loader } from 'components/Loader/Loader';\n\nexport const Home = () => {\n  const [films, setFilms] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n\n  useEffect(() => {\n    const fetchTrendingWeekly = () => {\n      setLoading(true);\n      fetchTrending()\n        .then(trendingFilm => {setFilms(trendingFilm)})\n        .catch(err => console.log(err))\n        .finally(setLoading(false));\n    };\n\n    console.log(films)\n   return fetchTrendingWeekly();\n    \n  }, [films]);\n\n  return (\n    <><div>\n    <h1>Trending today</h1>\n    <div>\n    <FilmList films={films} />\n    </div>\n    \n    {loading && <Loader />}\n  </div></>\n    \n  );\n};\n"],"names":["baseURL","API_KEY","fetchTrending","axios","response","data","results","fetchFilmsDetails","movieId","status","Error","fetchCastMovie","cast","fetchReviews","fetchSearch","query","console","log","FilmList","films","location","useLocation","map","film","to","id","state","from","title","Home","useState","setFilms","loading","setLoading","useEffect","then","trendingFilm","catch","err","finally","Loader"],"sourceRoot":""}