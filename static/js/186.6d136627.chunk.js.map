{"version":3,"file":"static/js/186.6d136627.chunk.js","mappings":"kPAKaA,EAAU,WACrB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WAEND,GAAW,IACXE,EAAAA,EAAAA,IAAaR,GACVS,MAAK,SAAAN,GAAO,OAAIC,EAAWD,EAAf,IACZO,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IACXG,QAAQR,GAAW,GAGzB,GAAE,CAACN,KAGF,gCACGK,IAAW,SAAC,IAAD,IACQ,IAAnBF,EAAQY,SACP,0BACE,wBACGZ,EAAQa,KAAI,SAAAC,GAAM,OACjB,2BACE,0BAAI,WAASA,EAAOC,WACpB,uBAAID,EAAOE,YAFJF,EAAOG,GADC,QASL,IAAnBjB,EAAQY,SACP,yBAAK,+CAIZ,C,mMCvCKM,EAAU,+BACVC,EAAU,mCAEHC,EAAa,mCAAE,oGACLC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,uCAAmDC,IAD9C,cACtBG,EADsB,yBAIrBA,EAASC,KAAKC,SAJO,2CAAF,qDAQbC,EAAiB,mCAAG,WAAO5B,GAAP,uFACNwB,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA8BrB,EAA9B,oBAAiDsB,EAAjD,oBADM,UAGL,OAFlBG,EADuB,QAGhBI,OAHgB,sBAInB,IAAIC,MAAM,6BAJS,gCAKbL,EAASC,MALI,2CAAH,sDASjBK,EAAc,mCAAG,WAAO/B,GAAP,uFACHwB,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA8BrB,EAA9B,4BAAyDsB,EAAzD,oBADG,UAGF,OAFlBG,EADoB,QAGbI,OAHa,sBAIhB,IAAIC,MAAM,6BAJM,gCAKTL,EAASC,KAAKM,MALL,2CAAH,sDAQdxB,EAAY,mCAAG,WAAOR,GAAP,uFACDwB,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA8BrB,EAA9B,4BAAyDsB,EAAzD,oBADC,UAGA,OAFlBG,EADkB,QAGXI,OAHW,sBAId,IAAIC,MAAM,6BAJI,gCAKPL,EAASC,KAAKC,SALP,2CAAH,sDAQZM,EAAW,mCAAG,WAAOC,GAAP,uFAEJV,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iCAA6CC,EAA7C,4DAAwGY,IAFpG,UAGH,OADlBT,EAFqB,QAGdI,OAHc,sBAIvBjB,QAAQC,IAAIY,GACN,IAAIK,MAAM,6BALO,gCAMXL,EAASC,KAAKC,SANH,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","components/ServiceAPI/ServiceAPI.js"],"sourcesContent":["import { Loader } from 'components/Loader/Loader';\nimport { fetchReviews } from 'components/ServiceAPI/ServiceAPI';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nexport const Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchReviewsMovie = () => {\n      setLoading(true);\n      fetchReviews(movieId)\n        .then(reviews => setReviews(reviews))\n        .catch(error => console.log(error))\n        .finally(setLoading(false));\n    };\n    fetchReviewsMovie();\n  }, [movieId]);\n\n  return (\n    <>\n      {loading && <Loader />}\n      {reviews.length !== 0 && (\n        <div>\n          <ul>\n            {reviews.map(review => (\n              <li key={review.id}>\n                <h2>Author: {review.author}</h2>\n                <p>{review.content}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n      {reviews.length === 0 && (\n        <div>We don't have any reviews for this movie</div>\n      )}\n    </>\n  )\n};\n","import axios from \"axios\";\n\nconst baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'c24b132e7bdacd2f4b83fad270195cf7'\n\nexport const fetchTrending= async () => {\nconst response = await axios.get(`${baseURL}/trending/movie/day?api_key=${API_KEY}`)\n\n\nreturn response.data.results\n}\n\n\nexport const fetchFilmsDetails = async (movieId) => {\n    const response = await axios.get(`${baseURL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`)\n\n    if (response.status !== 200) {\n        throw new Error(' ERROR! Smth went wrong! ');\n      } else return response.data;\n}\n\n\nexport const fetchCastMovie = async (movieId) => {\n    const response = await axios.get(`${baseURL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`)\n\n    if (response.status !== 200) {\n        throw new Error(' ERROR! Smth went wrong! ');\n      } else return  response.data.cast;\n}\n\nexport const fetchReviews = async (movieId) => {\n    const response = await axios.get(`${baseURL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`)\n\n    if (response.status !== 200) {\n        throw new Error(' ERROR! Smth went wrong! ');\n      } else return  response.data.results;\n}\n\nexport const fetchSearch = async (query) => {\n \nconst response = await axios.get(`${baseURL}/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`)\nif (response.status !== 200) {\n    console.log(response)\n    throw new Error(' ERROR! Smth went wrong! ');\n  } else return response.data.results\n}"],"names":["Reviews","movieId","useParams","useState","reviews","setReviews","loading","setLoading","useEffect","fetchReviews","then","catch","error","console","log","finally","length","map","review","author","content","id","baseURL","API_KEY","fetchTrending","axios","response","data","results","fetchFilmsDetails","status","Error","fetchCastMovie","cast","fetchSearch","query"],"sourceRoot":""}